version: '3.8'

services:
  # FRONTEND APPLICATION (PROD)
  frontend-app:
    build:
      context: frontend-app
      dockerfile: docker/prod/Dockerfile
    image: frontend-app-img
    container_name: frontend-app-ctn
    ports:
      - "${FRONTEND_APP_HOST_PORT}:${FRONTEND_APP_CONTAINER_PORT}"
    networks:
      - global-net

  # FRONTEND APPLICATION (DEV)
#  frontend-app:
#    build:
#      context: frontend-app
#      dockerfile: docker/dev/Dockerfile
#    image: frontend-app-img
#    container_name: frontend-app-ctn
#    ports:
#      - "${FRONTEND_APP_HOST_PORT}:${FRONTEND_APP_CONTAINER_PORT}"
#    volumes:
#      - ./frontend-app:/usr/app
#    networks:
#      - global-net

  # EUREKA DISCOVERY SERVER
  eureka-discovery-server:
    build: ./eureka-discovery-server
    image: eureka-discovery-server-img
    container_name: eureka-discovery-server-ctn
    ports:
      - "${EUREKA_SERVER_PORT}:${EUREKA_SERVER_PORT}"
    depends_on: 
      - zipkin
    networks:
      - global-net
    environment:
      - EUREKA_SERVER_HOST=${EUREKA_SERVER_HOST}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}

  # API GATEWAY
  api-gateway:
    build: ./api-gateway
    image: api-gateway-img
    container_name: api-gateway-ctn
    ports:
      - "${API_GATEWAY_PORT}:${API_GATEWAY_PORT}"
    depends_on:
      - zipkin
      - eureka-discovery-server
    networks:
      - global-net
    environment:
      - API_GATEWAY_HOST=${API_GATEWAY_HOST}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - EUREKA_SERVER_HOST=${EUREKA_SERVER_HOST}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - ZIPKIN_HOST=${ZIPKIN_HOST}
      - ZIPKIN_PORT=${ZIPKIN_PORT}
      - RESORT_SERVICE_HOST=${RESORT_SERVICE_HOST}
      - RESORT_SERVICE_PORT=${RESORT_SERVICE_PORT}
      - RESORT_RESERVATION_SERVICE_HOST=${RESORT_RESERVATION_SERVICE_HOST}
      - RESORT_RESERVATION_SERVICE_PORT=${RESORT_RESERVATION_SERVICE_PORT}
      - REVIEW_SERVICE_HOST=${REVIEW_SERVICE_HOST}
      - REVIEW_SERVICE_PORT=${REVIEW_SERVICE_PORT}
      - EVENT_SERVICE_HOST=${EVENT_SERVICE_HOST}
      - EVENT_SERVICE_PORT=${EVENT_SERVICE_PORT}
      - LOGGING_LEVEL_ROOT=${LOGGING_LEVEL_ROOT}

  # RABBIT-MQ
  rabbit-mq:
    image: rabbitmq:3-management-alpine
    container_name: rabbit-mq-ctn
    ports:
      - "${RABBIT_PORT}:${RABBIT_PORT}"
      - "${RABBIT_MANAGEMENT_PORT}:${RABBIT_MANAGEMENT_PORT}"
    volumes:
      - type: volume
        source: data-rabbit-mq
        target: /var/lib/rabbitmq
    networks:
      - global-net

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin-ctn
    ports:
      - "${ZIPKIN_PORT}:${ZIPKIN_PORT}"
    networks:
      - global-net

  # DATABASE RESORT-SERVICE
  db-postgres-resort:
    image: "postgres"
    container_name: db-resort-ctn
    ports:
      - "5001:5432"
    volumes:
      - db-data-resort:/var/lib/postgresql/data
    networks:
      - resort-net
    environment:
      POSTGRES_DB: dbresort
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      restart: unless-stopped

  # RESORT-SERVICE
  resort-service:
    build: ./resort-service
    image: resort-service-img
    container_name: resort-service-ctn
    ports:
      - "${RESORT_SERVICE_PORT}:${RESORT_SERVICE_PORT}"
    depends_on:
      - zipkin
      - eureka-discovery-server
      - api-gateway
      - rabbit-mq
      - db-postgres-resort
    networks:
      - resort-net
      - global-net
    environment:
      - RESORT_SERVICE_HOST=${RESORT_SERVICE_HOST}
      - RESORT_SERVICE_PORT=${RESORT_SERVICE_PORT}
      - EUREKA_SERVER_HOST=${EUREKA_SERVER_HOST}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USERNAME=${RABBIT_USERNAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - ZIPKIN_HOST=${ZIPKIN_HOST}
      - ZIPKIN_PORT=${ZIPKIN_PORT}
      - DATABASE_HOST=db-postgres-resort
      - DATABASE_PORT=5432
      - DATABASE_NAME=dbresort

  # DATABASE RESORT-RESERVATION-SERVICE
  db-postgres-resort-reservation:
    image: "postgres"
    container_name: db-resort-reservation-ctn
    ports:
      - "5002:5432"
    volumes:
      - db-data-resort-reservation:/var/lib/postgresql/data
    networks:
      - resort-reservation-net
    environment:
      POSTGRES_DB: dbresortreservation
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      restart: unless-stopped

  # RESORT-RESERVATION-SERVICE
  resort-reservation-service:
    build: ./resort-reservation-service
    image: resort-reservation-service-img
    container_name: resort-reservation-service-ctn
    ports:
      - "${RESORT_RESERVATION_SERVICE_PORT}:${RESORT_RESERVATION_SERVICE_PORT}"
    depends_on:
      - zipkin
      - eureka-discovery-server
      - api-gateway
      - db-postgres-resort-reservation
    networks:
      - resort-reservation-net
      - global-net
    environment:
      - RESORT_RESERVATION_SERVICE_HOST=${RESORT_RESERVATION_SERVICE_HOST}
      - RESORT_RESERVATION_SERVICE_PORT=${RESORT_RESERVATION_SERVICE_PORT}
      - EUREKA_SERVER_HOST=${EUREKA_SERVER_HOST}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - ZIPKIN_HOST=${ZIPKIN_HOST}
      - ZIPKIN_PORT=${ZIPKIN_PORT}
      - DATABASE_HOST=db-postgres-resort-reservation
      - DATABASE_PORT=5432
      - DATABASE_NAME=dbresortreservation

  # DATABASE REVIEW-SERVICE
  db-postgres-review:
    image: "postgres"
    container_name: db-review-ctn
    ports:
      - "5003:5432"
    volumes:
      - db-data-review:/var/lib/postgresql/data
    networks:
      - review-net
    environment:
      POSTGRES_DB: dbreview
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      restart: unless-stopped

  # REVIEW-SERVICE
  review-service:
    build: ./review-service
    image: review-service-img
    container_name: review-service-ctn
    ports:
      - "${REVIEW_SERVICE_PORT}:${REVIEW_SERVICE_PORT}"
    depends_on:
      - zipkin
      - eureka-discovery-server
      - api-gateway
      - rabbit-mq
      - db-postgres-review
    networks:
      - review-net
      - global-net
    environment:
      - REVIEW_SERVICE_HOST=${REVIEW_SERVICE_HOST}
      - REVIEW_SERVICE_PORT=${REVIEW_SERVICE_PORT}
      - EUREKA_SERVER_HOST=${EUREKA_SERVER_HOST}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - RABBIT_HOST=${RABBIT_HOST}
      - RABBIT_PORT=${RABBIT_PORT}
      - RABBIT_USERNAME=${RABBIT_USERNAME}
      - RABBIT_PASSWORD=${RABBIT_PASSWORD}
      - ZIPKIN_HOST=${ZIPKIN_HOST}
      - ZIPKIN_PORT=${ZIPKIN_PORT}
      - DATABASE_HOST=db-postgres-review
      - DATABASE_PORT=5432
      - DATABASE_NAME=dbreview

  # DATABASE EVENT-SERVICE
  db-postgres-event:
    image: "postgres"
    container_name: db-event-ctn
    ports:
      - "5004:5432"
    volumes:
      - db-data-event:/var/lib/postgresql/data
    networks:
      - event-net
    environment:
      POSTGRES_DB: dbevent
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      restart: unless-stopped

  # EVENT-SERVICE
  event-service:
    build: ./event-service
    image: event-service-img
    container_name: event-service-ctn
    ports:
      - "${EVENT_SERVICE_PORT}:${EVENT_SERVICE_PORT}"
    depends_on:
      - zipkin
      - eureka-discovery-server
      - api-gateway
      - db-postgres-event
    networks:
      - event-net
      - global-net
    environment:
      - EVENT_SERVICE_HOST=${EVENT_SERVICE_HOST}
      - EVENT_SERVICE_PORT=${EVENT_SERVICE_PORT}
      - EUREKA_SERVER_HOST=${EUREKA_SERVER_HOST}
      - EUREKA_SERVER_PORT=${EUREKA_SERVER_PORT}
      - ZIPKIN_HOST=${ZIPKIN_HOST}
      - ZIPKIN_PORT=${ZIPKIN_PORT}
      - DATABASE_HOST=db-postgres-event
      - DATABASE_PORT=5432
      - DATABASE_NAME=dbevent

volumes:
  db-data-resort:
  db-data-resort-reservation:
  db-data-review:
  db-data-event:
  data-rabbit-mq:
networks:
  global-net:
    driver: bridge
  resort-net:
    driver: bridge
  resort-reservation-net:
    driver: bridge
  review-net:
    driver: bridge
  event-net:
    driver: bridge