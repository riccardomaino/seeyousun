server:
  port: ${RESORT_RESERVATION_SERVICE_PORT:8080}
spring:
  application:
    name: resort-reservation-service
  # Configurazione del Database
  datasource:
    driver-class-name: org.postgresql.Driver
    username: admin
    password: admin
    url: jdbc:postgresql://${DATABASE_HOST:localhost}:${DATABASE_PORT:5432}/${DATABASE_NAME:default}
  # Configurazione di Spring Data JPA
  jpa:
    database: postgresql
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  # Configurazione del Config Server: se non viene trovato salta questo passaggio senza crashare grazie ad "optional"
  config:
    import: optional:configserver:http://localhost:8888
# Configurazione Eureka Server ed Eureka Client
eureka:
  instance:
    hostname: ${EUREKA_SERVER_HOST:localhost}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://${EUREKA_SERVER_HOST:localhost}:${EUREKA_SERVER_PORT:8761}/eureka/
# Configurazione Zipkin: utile per effettuare distributed tracing
management:
  zipkin:
    tracing:
      endpoint: http://${ZIPKIN_HOST:localhost}:${ZIPKIN_PORT:9411}/api/v2/spans
  tracing:
    sampling:
      probability: 1.0